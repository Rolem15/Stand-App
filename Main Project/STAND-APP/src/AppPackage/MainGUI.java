/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AppPackage;

import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.SpinnerDateModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mark Rolem
 */
public class MainGUI extends javax.swing.JFrame {

    int xMouse;
    int yMouse;
    int aMouse;
    int bMouse;
    
    public MainGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionArea = new javax.swing.JTextArea();
        addButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        eventList = new javax.swing.JTable();
        close = new javax.swing.JLabel();
        minimize = new javax.swing.JLabel();
        frameDrag = new javax.swing.JLabel();
        datePicker = new com.toedter.calendar.JDateChooser();
        Date date = new Date();
        SpinnerDateModel sm =
        new SpinnerDateModel(date, null, null, Calendar.HOUR_OF_DAY);
        timePicker = new javax.swing.JSpinner(sm);
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Stand-App");
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        descriptionArea.setColumns(20);
        descriptionArea.setLineWrap(true);
        descriptionArea.setRows(5);
        descriptionArea.setToolTipText("");
        jScrollPane1.setViewportView(descriptionArea);
        descriptionArea.getAccessibleContext().setAccessibleName("");

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 90, 287, -1));

        addButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        getContentPane().add(addButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(447, 90, 80, -1));

        editButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });
        getContentPane().add(editButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(447, 125, 80, -1));

        deleteButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        getContentPane().add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(447, 160, -1, -1));

        eventList.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        eventList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Time", "Description"
            }
        ));
        eventList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eventListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(eventList);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 507, 110));

        close.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeMouseClicked(evt);
            }
        });
        getContentPane().add(close, new org.netbeans.lib.awtextra.AbsoluteConstraints(522, 5, 19, 19));

        minimize.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeMouseClicked(evt);
            }
        });
        getContentPane().add(minimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(497, 5, 19, 19));

        frameDrag.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                frameDragMouseDragged(evt);
            }
        });
        frameDrag.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                frameDragMousePressed(evt);
            }
        });
        getContentPane().add(frameDrag, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 547, 15));

        datePicker.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        getContentPane().add(datePicker, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 120, 30));

        JSpinner.DateEditor de = new JSpinner.DateEditor(timePicker, "      HH:mm:ss");
        timePicker.setEditor(de);
        timePicker.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        getContentPane().add(timePicker, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 156, 122, 30));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AppPackage/Background.png"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 548, 348));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void closeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseClicked
        System.exit(0);
    }//GEN-LAST:event_closeMouseClicked

    private void minimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseClicked
        this.setState(MainGUI.ICONIFIED);
    }//GEN-LAST:event_minimizeMouseClicked

    private void frameDragMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_frameDragMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_frameDragMouseDragged

    private void frameDragMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_frameDragMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();

    }//GEN-LAST:event_frameDragMousePressed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
       String description, date, a, time;
       String[] point;
       Date myDate = (Date)timePicker.getValue();
       
       a = myDate.toString();
       point = a.split(" ");
       time = point[3];
       
       DefaultTableModel model = (DefaultTableModel) eventList.getModel();
       description = descriptionArea.getText();
       date = ((JTextField)datePicker.getDateEditor().getUiComponent()).getText();
       
       if(description.equals("")){
           JOptionPane.showMessageDialog(null, "Please Type A Description!");
       }
       else if (date.equals("")){
           JOptionPane.showMessageDialog(null, "Please Pick a Date!");
       }
       else{
           model.addRow(new Object[]{date, time, description}); 
           descriptionArea.setText("");
           ((JTextField)datePicker.getDateEditor().getUiComponent()).setText("");
       }
    }//GEN-LAST:event_addButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
       String description, date, a, time;
       String[] point;
       Date myDate = (Date)timePicker.getValue();
       
       a = myDate.toString();
       point = a.split(" ");
       time = point[3];
       
       DefaultTableModel model = (DefaultTableModel) eventList.getModel();
       description = descriptionArea.getText();
       date = ((JTextField)datePicker.getDateEditor().getUiComponent()).getText();
       
       if(eventList.getSelectedRow() == -1){
           if (eventList.getRowCount() == 0){
               JOptionPane.showMessageDialog(null, "Table is Empty");
           }
           else{
               JOptionPane.showMessageDialog(null, "Please Select a Note!");
           }
       }
       else{
            model.setValueAt(date, eventList.getSelectedRow(), 0);
            model.setValueAt(time, eventList.getSelectedRow(), 1);
            model.setValueAt(description, eventList.getSelectedRow(), 2);
            descriptionArea.setText("");
           ((JTextField)datePicker.getDateEditor().getUiComponent()).setText("");
       }
    }//GEN-LAST:event_editButtonActionPerformed

    private void eventListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eventListMouseClicked
       String description, date, a, time;
       String[] point;
       
       DefaultTableModel model = (DefaultTableModel) eventList.getModel();
       description = descriptionArea.getText();
       date = ((JTextField)datePicker.getDateEditor().getUiComponent()).getText();
       
       ((JTextField)datePicker.getDateEditor().getUiComponent()).setText// nasa babang line ang karugtong...
       (model.getValueAt(eventList.getSelectedRow(), 0).toString());
       
       descriptionArea.setText(model.getValueAt(eventList.getSelectedRow(), 2).toString());
    }//GEN-LAST:event_eventListMouseClicked

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) eventList.getModel();
        if(eventList.getSelectedRow() == -1){
           if (eventList.getRowCount() == 0){
               JOptionPane.showMessageDialog(null, "Table is Empty");
           }
           else{
               JOptionPane.showMessageDialog(null, "Please Select a Note!");
           }
       }
        else{
            model.removeRow(eventList.getSelectedRow());
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JLabel background;
    private javax.swing.JLabel close;
    private com.toedter.calendar.JDateChooser datePicker;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextArea descriptionArea;
    private javax.swing.JButton editButton;
    private javax.swing.JTable eventList;
    private javax.swing.JLabel frameDrag;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel minimize;
    private javax.swing.JSpinner timePicker;
    // End of variables declaration//GEN-END:variables
}
